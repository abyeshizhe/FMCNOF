function [B ] = GetB2(view,Uview,sigma,s,A)
%得到B矩阵
[m,~]=size(Uview);
[p,~]=size(view);
n=size(A,2);
temp1=[];temp3=[];
for i=1:n
    temp0=size(A{i},2);
    temp1=[temp1,temp0];
    temp2=size(A{i},1);
    temp3=[temp3,temp2];
end
U=mat2cell(Uview,m,temp1);%[48,40,254,1984,512,928]);%[30,9,30]);%);%[2688,2000,252,2000,2000,2000]);%[64,225,144,73,128]);%[48,40,254,1984,512,928]);%[512,59,864,254]);%[24,512,256,254]);%[64,144,73,128,225,500]);%[64,225,144,73,128]);%[512,59,864,254]);%[64,144,73,128,225,500][2688,2000,252,2000,2000,2000]);%[4096,3304,6750]);%[64,225,144,73,128]);[1840,3000][30,9,30][48,40,254,1984,512,928]
V=mat2cell(view,p,temp1);%[48,40,254,1984,512,928]);%[216,76,64,6,240,47]);[216,76,64,6,240,47]

D=cellfun(@pdist2,U,V, 'UniformOutput', false);%若需调整距离函数，改变pdist2即可
%sigma=mean(D{1,1}(1,:));
D1 = cell2mat(D);
D1=exp(-D1/(2*sigma*sigma));
%D1 = mat2cell(D1,p,[200,200,200,200,200,200]);

K=sort(D1,1);
%K=cellfun(@sort,D1,2, 'UniformOutput', false);
M=repmat(K(s,:),size(D1,1),1) ;  % 按行复制最小值和原矩阵同维数
D1(D1>M)=0.0000001 ;  
Bsum=sum(K(1:s,:),1);
Bsum1=repmat(Bsum,m,1);
B=D1./Bsum1;
B=mat2cell(B,m,temp3);%[2386,2386,2386,2386,2386,2386]);%[4000,4000,4000]);%[1051,1051]);%[4000,4000,4000]);%);%[4000,4000,4000,4000,4000,4000]);%[2386,2386,2386,2386,2386,2386]);%[400,400,400,400]);%[2400,2400,2400,2400,2400,2400][7000,7000,7000]);%[165,165,165]);%[3000,3000,3000,3000,3000]);%[2386,2386,2386,2386,2386,2386][1051,1051][1000,1000,1000,1000,1000,1000]




  


